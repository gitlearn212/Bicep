use azure bicep to create a linux vm with additional 4TIB dik and format the disk use
 ext4

param adminUsername string
param adminPassword securestring

var location = 'East US'
var vmName = 'myVM'
var vnetName = 'myVnet'
var subnetName = 'mySubnet'
var publicIPName = 'myPublicIP'
var nicName = 'myNIC'
var dataDiskName = 'additionalDisk'

resource vnet 'Microsoft.Network/virtualNetworks@2020-11-01' = {
  name: vnetName
  location: location
  properties: {
    addressSpace: {
      addressPrefixes: ['10.0.0.0/16']
    }
  }
}

resource subnet 'Microsoft.Network/virtualNetworks/subnets@2020-11-01' = {
  name: subnetName
  parent: vnet
  properties: {
    addressPrefix: '10.0.0.0/24'
  }
}

resource publicIP 'Microsoft.Network/publicIPAddresses@2020-11-01' = {
  name: publicIPName
  location: location
  properties: {
    publicIPAllocationMethod: 'Dynamic'
  }
}

resource nic 'Microsoft.Network/networkInterfaces@2020-11-01' = {
  name: nicName
  location: location
  properties: {
    ipConfigurations: [
      {
        name: 'ipconfig'
        properties: {
          subnet: {
            id: subnet.id
          }
          publicIPAddress: {
            id: publicIP.id
          }
        }
      }
    ]
  }
}

resource vm 'Microsoft.Compute/virtualMachines@2020-06-01' = {
  name: vmName
  location: location
  properties: {
    hardwareProfile: {
      vmSize: 'Standard_DS2_v2'
    }
    osProfile: {
      computerName: vmName
      adminUsername: adminUsername
      adminPassword: adminPassword
    }
    storageProfile: {
      osDisk: {
        createOption: 'FromImage'
      }
      dataDisks: [
        {
          name: dataDiskName
          diskSizeGB: 4096
          createOption: 'Empty'
        }
      ]
    }
    networkProfile: {
      networkInterfaces: [
        {
          id: nic.id
        }
      ]
    }
  }
}

resource extension 'Microsoft.Compute/virtualMachines/extensions@2020-06-01' = {
  name: 'customScript'
  location: location
  dependsOn: [
    vm
  ]
  properties: {
    publisher: 'Microsoft.Azure.Extensions'
    type: 'CustomScript'
    typeHandlerVersion: '2.1'
    settings: {
      script: '#!/bin/bash\nsudo parted /dev/sdc mklabel gpt\nsudo parted /dev/sdc mkpart primary ext4 0% 100%\nsudo mkfs.ext4 /dev/sdc1\n'
    }
    protectedSettings: {
      storageAccountName: 'yourStorageAccountName'
      storageAccountKey: 'yourStorageAccountKey'
    }
  }
}

resource extensionFstab 'Microsoft.Compute/virtualMachines/extensions@2020-06-01' = {
  name: 'customScriptFstab'
  location: location
  dependsOn: [
    extension
  ]
  properties: {
    publisher: 'Microsoft.Azure.Extensions'
    type: 'CustomScript'
    typeHandlerVersion: '2.1'
    settings: {
      script: '#!/bin/bash\necho "/dev/sdc1   /mnt/data   ext4   defaults   0   2" | sudo tee -a /etc/fstab\nsudo mkdir /mnt/data\nsudo mount -a\n'
    }
  }
}

''''''partition using GPT''''''''''

v#!/bin/bash
# Identify the disk
DISK="/dev/sdc"

# Partition the disk with GPT
sudo parted $DISK --script mklabel gpt
sudo parted $DISK --script mkpart primary ext4 0% 100%

# Format the partition
sudo mkfs.ext4 ${DISK}1

# Mount the filesystem
sudo mkdir /mnt/data
echo "${DISK}1 /mnt/data ext4 defaults 0 0" | sudo tee -a /etc/fstab
sudo mount -a

===========


script to format disk
#!/bin/bash
# Identify the disk
DISK="/dev/sdc"

# Partition the disk
echo -e "n\np\n1\n\n\nw" | sudo fdisk $DISK

# Format the partition
sudo mkfs.ext4 ${DISK}1

# Mount the filesystem
sudo mkdir /mnt/data
echo "${DISK}1 /mnt/data ext4 defaults 0 0" | sudo tee -a /etc/fstab
sudo mount -a
